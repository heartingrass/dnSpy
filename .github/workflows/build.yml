name: GitHub CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types: released

jobs:
  build:
    name: Build
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Install .NET
        shell: pwsh
        run: |
          Invoke-WebRequest https://dot.net/v1/dotnet-install.ps1 -OutFile dotnet-install.ps1
          ./dotnet-install.ps1 -Channel 3.1

      # Build each tfm separately since building all requires too much disk space
      - name: Build dnSpy (.NET Framework)
        shell: pwsh
        run: |
          $msbuildPath = Split-Path (& "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -requires Microsoft.Component.MSBuild -find MSBuild\Current\Bin\amd64\MSBuild.exe | Select-Object -First 1) -Parent
          $env:PATH = $msbuildPath + ';' + $env:PATH
          .\build.ps1 net
          New-Item -ItemType Directory -Path C:\builtfiles -Force > $null
          Compress-Archive -Path dnSpy\dnSpy\bin\Release\net48\* -DestinationPath C:\builtfiles\dnSpy-net48.zip
          .\clean-all.cmd

      - name: Build dnSpy (.NET Core x86)
        shell: pwsh
        run: |
          $msbuildPath = Split-Path (& "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -requires Microsoft.Component.MSBuild -find MSBuild\Current\Bin\amd64\MSBuild.exe | Select-Object -First 1) -Parent
          $env:PATH = $msbuildPath + ';' + $env:PATH
          .\build.ps1 core-x86
          New-Item -ItemType Directory -Path C:\builtfiles -Force > $null
          Compress-Archive -Path dnSpy\dnSpy\bin\Release\netcoreapp3.1\win-x86\publish\* -DestinationPath C:\builtfiles\dnSpy-netcore-win32.zip
          .\clean-all.cmd

      - name: Build dnSpy (.NET Core x64)
        shell: pwsh
        run: |
          $msbuildPath = Split-Path (& "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -requires Microsoft.Component.MSBuild -find MSBuild\Current\Bin\amd64\MSBuild.exe | Select-Object -First 1) -Parent
          $env:PATH = $msbuildPath + ';' + $env:PATH
          .\build.ps1 core-x64
          New-Item -ItemType Directory -Path C:\builtfiles -Force > $null
          Compress-Archive -Path dnSpy\dnSpy\bin\Release\netcoreapp3.1\win-x64\publish\* -DestinationPath C:\builtfiles\dnSpy-netcore-win64.zip
          .\clean-all.cmd

      - uses: actions/upload-artifact@v1
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        with:
          name: dnSpy-net48
          path: C:\builtfiles\dnSpy-net48.zip

      - uses: actions/upload-artifact@v1
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        with:
          name: dnSpy-netcore-win32
          path: C:\builtfiles\dnSpy-netcore-win32.zip

      - uses: actions/upload-artifact@v1
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        with:
          name: dnSpy-netcore-win64
          path: C:\builtfiles\dnSpy-netcore-win64.zip

      # Create a new release: create a tag, then 'git push origin <tagname>', wait for it to build
      - name: Create a new GitHub release if a new tag is pushed
        uses: softprops/action-gh-release@b28d815 #@v1
        with:
          files: |
            C:\builtfiles\dnSpy-net48.zip
            C:\builtfiles\dnSpy-netcore-win32.zip
            C:\builtfiles\dnSpy-netcore-win64.zip
          body: |
            If your antivirus software complains, it's a false positive and you should contact them. I can't fix their buggy software.
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
